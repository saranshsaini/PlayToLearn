{"version":3,"sources":["SheetMusic.js","GameData.js","Instructions.js","abctomidi.js","miditoabc.js","Game.js","MidiInterface.js","Header.js","Footer.js","App.js","index.js"],"names":["SheetMusic","props","notes","clef","note","useEffect","abcjs","renderAbc","scale","className","id","GameData","total","curr","numPressed","accuracy","toFixed","final","onClick","window","location","reload","Instructions","src","alt","back","abctomidimap","miditoabcmap","Game","inputNote","changeInput","setOver","useState","gameStarted","setGameStarted","notesList","setNotesList","currInd","setCurrInd","setNote","setClef","showModal","setShowModal","numNotes","setNumNotes","gameOver","setGameOver","changeNote","toMainMenu","length","prev","type","name","value","onChange","e","target","n","min","max","i","rand","Math","ceil","floor","random","no","push","getNotesList","connectMidi","MidiInterface","midiInputs","setMidiInputs","setNumPressed","gameAllowed","setGameAllowed","midiAllowed","setMidiAllowed","onMIDISuccess","midiAccess","inputs","connectMidiFunctions","onMIDIMessage","func","forEach","entry","onmidimessage","event","console","log","data","onMIDIFailure","refresh","navigator","requestMIDIAccess","then","Header","Footer","rel","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4b73c553.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport abcjs from \"abcjs\";\nimport \"./App.css\";\n\nexport default function SheetMusic(props) {\n  const notes = \"K:clef=\" + props.clef + \" \\n L:1/4 \\n |\" + props.note;\n\n  useEffect(() => {\n    abcjs.renderAbc(\"paper\", notes, { scale: 1.7 });\n  });\n\n  return (\n    <div className=\"sheetmusic_div\">\n      <div id=\"paper\" className=\"sheetmusic\" />\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function GameData(props) {\n  const { total, curr, numPressed } = props;\n  const accuracy =\n    numPressed > 0 ? ((curr / numPressed) * 100).toFixed(2) : \" --\";\n  return (\n    <div className={\"dataBox \" + (props.final && \"gameover\")}>\n      <h1>Game Stats:</h1>\n      {!props.final && (\n        <p>\n          <strong>\n            <u>Progress: </u>\n          </strong>\n          {curr} played, {total - curr} notes remaining\n        </p>\n      )}\n      <p>\n        <strong>\n          <u>Accuracy:</u>\n        </strong>\n        {accuracy}%\n      </p>\n      <p>\n        <strong>\n          <u>Incorrect:</u>\n        </strong>\n        {numPressed - curr}\n      </p>\n      {props.final && (\n        <button onClick={() => window.location.reload()}>Play Again</button>\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Instructions(props) {\n  return (\n    <div className=\"instructions-box\">\n      <h2>Set up</h2>\n      <p>You'll need a MIDI capable piano to make the most of this site.</p>\n      <p>\n        Currently, only Chrome and Edge have MIDI Input capability supported in\n        the browser.\n      </p>\n      <p>\n        Enter the number of notes you want to play and hit start!\n      </p>\n      <p>\n        If the MIDI input isn't being detected for whatever reason, simply\n        unplug and plug it back into you're computer.\n      </p>\n      <p>\n        The image below shows various connection types. The most straightforward\n        is the USB connection, though others can work as well.\n      </p>\n      <img\n        src=\"https://www.doctormix.com/blog/wp-content/uploads/2016/05/What-Audio-Cable-Is-Best.jpg\"\n        alt=\"diagram of various MIDI Connection types\"\n      />\n      <button onClick={props.back}>Back to Game</button>\n    </div>\n  );\n}\n","const abctomidimap = {\n  \"A,,,\": 33,\n  \"^A,,,\": 34,\n  \"_B,,,\": 34,\n  \"B,,,\": 35,\n  \"C,,\": 36,\n  \"^C,,\": 37,\n  \"_D,,\": 37,\n  \"D,,\": 38,\n  \"^D,,\": 39,\n  \"_E,,\": 39,\n  \"E,,\": 40,\n  \"F,,\": 41,\n  \"^F,,\": 42,\n  \"_G,,\": 42,\n  \"G,,\": 43,\n  \"^G,,\": 44,\n  \"_A,,\":44,\n  \"A,,\":45,\n  \"^A,,\":46,\n  \"_B,,\":46,\n  \"B,,\":47,\n  \"C,\":48,\n  \"^C,\":49,\n  \"_D,\":49,\n  \"D,\":50,\n  \"^D,\":51,\n  \"_E,\":51,\n  \"E,\":52,\n  \"F,\":53,\n  \"^F,\":54,\n  \"_G,\":54,\n  \"G,\":55,\n  \"^G,\":56,\n  \"_A,\":56,\n  \"A,\":57,\n  \"^A,\":58,\n  \"_B,\":58,\n  \"B,\":59,\n  \"C\":60,\n  \"^C\":61,\n  \"_D\":61,\n  \"D\":62,\n  \"^D\":63,\n  \"_E\":63,\n  \"E\":64,\n  \"F\":65,\n  \"^F\":66,\n  \"_G\":66,\n  \"G\":67,\n  \"^G\":68,\n  \"_A\":68,\n  \"A\":69,\n  \"^A\":70,\n  \"_B\":70,\n  \"B\":71,\n  \"c\":72,\n  \"^c\":73,\n  \"_d\":73,\n  \"d\":74,\n  \"^d\":75,\n  \"_e\":75,\n  \"e\":76,\n  \"f\":77,\n  \"^f\":78,\n  \"_g\":78,\n  \"g\":79,\n  \"^g\":80,\n  \"_a\":80,\n  \"a\":81,\n  \"^a\":82,\n  \"_b\":82,\n  \"b\":83,\n  \"c'\":84,\n  \"^c'\":85,\n  \"_d'\":85,\n  \"d'\":86,\n  \"^d'\":87,\n  \"_e'\":87,\n  \"e'\":88\n};\n\n\nexport default abctomidimap;","const miditoabcmap = {\n  33: \"A,,,\",\n  34: \"_B,,,\",\n  35: \"B,,,\",\n  36: \"C,,\",\n  37: \"_D,,\",\n  38: \"D,,\",\n  39: \"_E,,\",\n  40: \"E,,\",\n  41: \"F,,\",\n  42: \"_G,,\",\n  43: \"G,,\",\n  44: \"_A,,\",\n  45: \"A,,\",\n  46: \"_B,,\",\n  47: \"B,,\",\n  48: \"C,\",\n  49: \"_D,\",\n  50: \"D,\",\n  51: \"_E,\",\n  52: \"E,\",\n  53: \"F,\",\n  54: \"_G,\",\n  55: \"G,\",\n  56: \"_A,\",\n  57: \"A,\",\n  58: \"_B,\",\n  59: \"B,\",\n  60: \"C\",\n  61: \"_D\",\n  62: \"D\",\n  63: \"_E\",\n  64: \"E\",\n  65: \"F\",\n  66: \"_G\",\n  67: \"G\",\n  68: \"_A\",\n  69: \"A\",\n  70: \"_B\",\n  71: \"B\",\n  72: \"c\",\n  73: \"_d\",\n  74: \"d\",\n  75: \"_e\",\n  76: \"e\",\n  77: \"f\",\n  78: \"_g\",\n  79: \"g\",\n  80: \"_a\",\n  81: \"a\",\n  82: \"_b\",\n  83: \"b\",\n  84: \"c'\",\n  85: \"_d'\",\n  86: \"d'\",\n  87: \"_e'\",\n  88: \"e'\",\n};\n\n\nexport default miditoabcmap;","import React, { useState, useEffect } from \"react\";\nimport SheetMusic from \"./SheetMusic\";\nimport GameData from \"./GameData\";\nimport Instructions from \"./Instructions\";\nimport abctomidimap from \"./abctomidi\";\nimport miditoabcmap from \"./miditoabc\";\n\nexport default function Game(props) {\n  const { inputNote, numPressed, changeInput, setOver } = props;\n  const [gameStarted, setGameStarted] = useState(false);\n  const [notesList, setNotesList] = useState([]);\n  const [currInd, setCurrInd] = useState(0);\n  const [note, setNote] = useState(\"\");\n  const [clef, setClef] = useState(\"treble\");\n  const [showModal, setShowModal] = useState(\"\");\n  const [numNotes, setNumNotes] = useState(10);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (gameStarted && notesList.length === currInd) {\n      setOver();\n      setGameOver(true);\n\n      //props.connectMidiFunctions(null);\n    } else if (!gameOver && inputNote === notesList[currInd]) {\n      setCurrInd((prev) => prev + 1);\n\n      changeInput();\n\n      changeNote(notesList[currInd]);\n    }\n  }, [\n    currInd,\n    gameStarted,\n    notesList,\n    inputNote,\n    setGameOver,\n    note,\n    gameOver,\n    changeInput,\n    setOver,\n  ]);\n\n  useEffect(() => {\n    if (!gameOver) {\n      changeNote(notesList[currInd]);\n    }\n  });\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  function changeNote(note) {\n    const n = abctomidimap[note];\n    if (true /*n >= 33 && n <= 88*/) {\n      if (n < 60) {\n        setClef(\"bass\");\n      } else {\n        setClef(\"treble\");\n      }\n      setNote(note);\n    }\n  }\n\n  function getNotesList() {\n    var n = [];\n    for (let i = 0; i < numNotes; i++) {\n      let rand = getRandomInt(48, 83);\n      let no = miditoabcmap[rand];\n      n.push(no);\n    }\n    return n;\n  }\n\n  function startGame() {\n    if (numNotes < 10) {\n      return;\n    }\n    const n = getNotesList();\n    //console.log(\"created new list: \", n);\n    setNotesList(n);\n    setNote(notesList[0]);\n    setGameStarted(true);\n    setCurrInd(0);\n    props.connectMidi();\n  }\n\n  function toMainMenu() {\n    setShowModal(\"\");\n    setGameStarted(false);\n  }\n\n  if (!gameStarted && showModal.length === 0) {\n    return (\n      <div className=\"menuHolder\">\n        Number of keys (minimum 10):\n        <input\n          type=\"number\"\n          name=\"num\"\n          value={numNotes}\n          onChange={(e) => setNumNotes(e.target.value)}\n        />\n        <button onClick={startGame}>\n          <h3>Start Game</h3>\n        </button>\n        <button onClick={() => setShowModal(\"instructions\")}>\n          <h3>How to Use</h3>\n        </button>\n      </div>\n    );\n  } else if (!gameStarted && showModal === \"instructions\") {\n    return <Instructions back={toMainMenu} />;\n  } else if (gameStarted && !gameOver) {\n    return (\n      <>\n        <h2>Start Playing!</h2>\n        <div className=\"gameHolder\">\n          <SheetMusic note={note} clef={clef} />\n          <GameData numPressed={numPressed} total={numNotes} curr={currInd} />\n          <button onClick={toMainMenu}>Back to Main Menu</button>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <GameData final numPressed={numPressed} total={numNotes} curr={currInd} />\n    );\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport Game from \"./Game\";\nimport miditoabcmap from \"./miditoabc\";\nimport \"./App.css\";\n\nexport default function MidiInterface() {\n  \n  const BEGINNOTE = 144;\n  const [midiInputs, setMidiInputs] = useState();\n  const [note, setNote] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [numPressed, setNumPressed] = useState(0);\n  const [gameAllowed, setGameAllowed] = useState(true);\n  const [midiAllowed, setMidiAllowed] = useState(true);\n\n  useEffect(() => {\n    testMidi();\n  }, []);\n\n  useEffect(() => {\n    if (midiInputs != null) {\n      connectMidiFunctions(midiInputs, null);\n    }\n  }, [gameOver,midiInputs]);\n\n  function testMidi() {\n    if (navigator.requestMIDIAccess) {\n      //console.log(\"This browser supports WebMIDI!\");\n      setMidiAllowed(true);\n    } else {\n      //console.log(\"WebMIDI is not supported in this browser.\");\n      setMidiAllowed(false);\n    }\n  }\n\n  function connectMidi() {\n    navigator.requestMIDIAccess().then(onMIDISuccess, onMIDIFailure);\n  }\n\n  function onMIDISuccess(midiAccess) {\n    setMidiInputs(midiAccess.inputs);\n\n    setGameAllowed(true);\n    connectMidiFunctions(midiAccess.inputs, onMIDIMessage);\n  }\n\n  function connectMidiFunctions(inputs, func) {\n    inputs.forEach((entry) => (entry.onmidimessage = func));\n  }\n\n  function onMIDIMessage(event) {\n    console.log(\"notes\", event.data);\n    changeNote(event.data);\n  }\n\n  function changeNote(n) {\n    const note = n[1];\n\n    if (n[0] === BEGINNOTE) {\n      setNumPressed((prev) => prev + 1);\n      setNote(miditoabcmap[note]);\n    }\n  }\n\n  function onMIDIFailure() {\n    //console.log(\"Could not access your MIDI devices.\");\n    setGameAllowed(false);\n  }\n\n  function refresh() {\n    window.location.reload();\n  }\n\n  return (\n    <div className=\"sheetholder\">\n      {!midiAllowed && (\n        <div className=\"error\">\n          <h1>It looks like this browser doesn't allow for MIDI input...</h1>\n          <p>\n            Currently, only Chrome and Edge have MIDI Input capability\n            supported.\n          </p>\n          <button onClick={refresh}>Try Again</button>\n        </div>\n      )}\n      {midiAllowed && !gameAllowed && (\n        <div className=\"error\">\n          <h1>It looks like you denied MIDI input in the browser...</h1>\n          <button onClick={refresh}>Try Again</button>\n        </div>\n      )}\n      {midiAllowed && gameAllowed && (\n        <Game\n          setOver={() => setGameOver(true)}\n          inputNote={note}\n          numPressed={numPressed}\n          changeInput={() => setNote(\"\")}\n          connectMidi={connectMidi}\n          connectMidiFunctions={connectMidiFunctions}\n        />\n      )}\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Header() {\n  return (\n    <div className=\"header-holder\">\n     \n      <h1>Piano Typer</h1>\n     \n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Footer() {\n  return (\n    <div className=\"footer-holder\">\n      <a\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        href=\"https://github.com/saranshsaini/PlayToLearn/\"\n      >\n        Source Code\n      </a>\n\n    </div>\n  );\n}\n","import React from \"react\";\nimport MidiInterface from \"./MidiInterface\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\n\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <MidiInterface />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}